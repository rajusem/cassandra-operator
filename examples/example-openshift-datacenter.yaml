apiVersion: cassandraoperator.instaclustr.com/v1alpha1
kind: CassandraDataCenter
metadata:
  name: test-dc-cassandra
  labels:
    app: cassandra
spec:
  prometheusSupport: false
  optimizeKernelParams: false
  serviceAccountName: cassandra-performance
  nodes: 3
  racks:
    - name: "east1-a"
      labels:
        failure-domain.beta.kubernetes.io/zone: us-east-1a
    - name: "east1-b"
      labels:
        failure-domain.beta.kubernetes.io/zone: us-east-1b
    - name: "east1-c"
      labels:
        failure-domain.beta.kubernetes.io/zone: us-east-1c
  cassandraImage: "gcr.io/cassandra-operator/cassandra-3.11.5:latest"
  sidecarImage: "gcr.io/cassandra-operator/cassandra-sidecar:latest"
  imagePullPolicy: Always
  imagePullSecrets:
    - name: regcred

  resources:
    limits:
      memory: 1Gi
    requests:
      memory: 1Gi
  sidecarResources:
    limits:
      memory: 512Mi
    requests:
      memory: 512Mi
  dataVolumeClaimSpec:
    accessModes:
      - ReadWriteOnce
    storageClassName: gp2
    resources:
      requests:
        storage: 5Gi

#  userConfigMapVolumeSource:
#    name: test-dc-cassandra-user-config
#    type: array
#    items:
#      - key: cassandra_ssl
#        path: cassandra.yaml.d/003-ssl.yaml
#      - key: cqlshrc
#        path: cqlshrc
#      - key: install_cqlshrc
#        path: cassandra-env.sh.d/003-install-cqlshrc.sh
#      - key: cassandra_concurrent
#        path: cassandra.yaml.d/100-concurrent.yaml
#  userSecretVolumeSource:
#    secretName: test-cassandra-dc-ssl
#
#  sidecarSecretVolumeSource:
#    secretName: test-cassandra-dc-ssl-sidecar

  cassandraAuth:
    authenticator: PasswordAuthenticator
    authorizer: CassandraAuthorizer
    roleManager: CassandraRoleManager

#  operatorLabels:
#    prometheusService:
#      cassandratestdclabel: testdc
#    nodesService:
#      mynodesservicelabel: labelvalue1
#    statefulSet:
#      mystatefullabel: labelvalue2
#    podTemplate:
#      mypodlabel: label1
#      myanotherpod: label2
#
#  operatorAnnotations:
#    prometheusService:
#      p1 : pv1
#    nodesService:
#      n1: nv1
#      n2: nv2
#    statefulSet:
#      s1: sv1
#      s2: sv2
#    podTemplate:
#      pt1: ptv1
#      pt2: ptv2

  # Needed to run on AKS
  fsGroup: 999
